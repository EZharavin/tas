-- MySQL Script generated by MySQL Workbench
-- Пн 10 мая 2021 20:37:54
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema tas
-- -----------------------------------------------------
-- New base for TAS project.

-- -----------------------------------------------------
-- Schema tas
--
-- New base for TAS project.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tas` DEFAULT CHARACTER SET utf8 ;
USE `tas` ;

-- -----------------------------------------------------
-- Table `tas`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`users` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  `group` INT NOT NULL,
  PRIMARY KEY (`iduser`),
  UNIQUE INDEX `id_UNIQUE` (`iduser` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tas`.`topic`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`topic` (
  `idtopic` INT NOT NULL AUTO_INCREMENT,
  `title_id` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idtopic`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tas`.`cards`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`cards` (
  `idcards` INT NOT NULL AUTO_INCREMENT,
  `title_id` INT NULL,
  `question` MEDIUMTEXT NOT NULL,
  `answer` MEDIUMTEXT NOT NULL,
  `option_1` MEDIUMTEXT NULL,
  `option_2` MEDIUMTEXT NULL,
  PRIMARY KEY (`idcards`, `title_id`),
  UNIQUE INDEX `id_UNIQUE` (`idcards` ASC) VISIBLE,
  INDEX `topic_idx` (`title_id` ASC) VISIBLE,
  CONSTRAINT `topic`
    FOREIGN KEY (`title_id`)
    REFERENCES `tas`.`topic` (`idtopic`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tas`.`ticket`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`ticket` (
  `idticket` INT NOT NULL AUTO_INCREMENT,
  `ticket_number` INT NOT NULL,
  `card_id` INT NOT NULL,
  PRIMARY KEY (`idticket`),
  INDEX `cards_idx` (`card_id` ASC) VISIBLE,
  CONSTRAINT `cards`
    FOREIGN KEY (`card_id`)
    REFERENCES `tas`.`cards` (`idcards`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tas`.`ticket_properties`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`ticket_properties` (
  `ticket_id` INT NOT NULL AUTO_INCREMENT,
  `time` INT NOT NULL,
  `quantity` INT NOT NULL,
  PRIMARY KEY (`ticket_id`),
  UNIQUE INDEX `ticket_id_UNIQUE` (`ticket_id` ASC) VISIBLE,
  CONSTRAINT `fk_ticket_properties_1`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `tas`.`ticket` (`idticket`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tas`.`rating`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`rating` (
  `user_id` INT NOT NULL,
  `sum_result` INT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_id_UNIQUE` (`user_id` ASC) VISIBLE)
ENGINE = InnoDB
COMMENT = 'Рейтинг пользователей считается по формуле: количество правильных ответов / (время, потраченное на экзамен + количество неправильных ответов или пропущенных вопросов * 2 ми-нуты).';


-- -----------------------------------------------------
-- Table `tas`.`result`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`result` (
  `idresult` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `ticket_id` INT NOT NULL,
  `resultcol` DECIMAL(100,2) NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`idresult`, `user_id`),
  UNIQUE INDEX `idresult_UNIQUE` (`idresult` ASC) VISIBLE,
  UNIQUE INDEX `ticket_id_UNIQUE` (`ticket_id` ASC) VISIBLE,
  INDEX `usr_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `usr`
    FOREIGN KEY (`user_id`)
    REFERENCES `tas`.`users` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_result_1`
    FOREIGN KEY (`user_id`)
    REFERENCES `tas`.`rating` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ticket`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `tas`.`ticket` (`idticket`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tas`.`misrakes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tas`.`misrakes` (
  `user_id` INT NOT NULL,
  `ticket_id` INT NULL,
  `false_answer` MEDIUMTEXT NULL,
  `true_answer` MEDIUMTEXT NULL,
  PRIMARY KEY (`user_id`),
  INDEX `tikets_idx` (`ticket_id` ASC) VISIBLE,
  CONSTRAINT `fk_misrakes_1`
    FOREIGN KEY (`user_id`)
    REFERENCES `tas`.`users` (`iduser`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `tikets`
    FOREIGN KEY (`ticket_id`)
    REFERENCES `tas`.`ticket` (`idticket`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
